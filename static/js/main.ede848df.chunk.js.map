{"version":3,"sources":["actions/postActions.js","components/Post.js","components/Posts.js","containers/PostsContainer.js","components/Favorite.js","components/Favorites.js","containers/FavoritesContainer.js","components/Navbar.js","App.js","index.js","reducers/managePosts.js"],"names":["fetchPosts","dispatch","type","fetch","then","response","json","posts","payload","data","children","Post","addFavorite","postId","_this","props","_this2","this","react_default","a","createElement","className","src","url","alt","title","author_fullname","onClick","id","Component","withRouter","connect","newFav","Posts","map","post","components_Post","key","PostsContainer","length","components_Posts","state","Favorite","deleteFavorite","deletedFav","Favorites","favorites","favorite","components_Favorite","FavoritesContainer","components_Favorites","link","width","padding","height","background","textDecoration","color","size","Navbar","NavLink","to","exact","style","activeStyle","numFavs","App","components_Navbar","favs","numFavorites","Route","path","component","store","createStore","arguments","undefined","loading","action","Object","objectSpread","filter","toConsumableArray","concat","comments","comment","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ede848df.chunk.js","sourcesContent":["const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n\nexport const fetchPosts = () => {\n    return (dispatch) => {\n        dispatch({ type: 'LOADING_POSTS' });\n        return fetch('https://www.reddit.com/r/analog/top/.json')\n            .then(response => response.json())\n            .then(posts => dispatch({type: 'FETCH_POSTS', payload: posts.data.children }))\n    }\n};\n\nexport const addFavorite = postId => {\n    return {\n        type: 'ADD_FAVORITE',\n        newFav: postId\n    }\n}\n\nexport const deleteFavorite = postId => {\n    return {\n        type: 'DELETE_FAVORITE',\n        deletedFav: postId\n    }\n}\n\n// export const addComment = (text, discussionId) => {\n//         return (dispatch) => {\n//         dispatch({type: 'LOADING_COMMENTS'});\n//         return fetch(`/api/discussions/${discussionId}/comments`, {\n//             method: \"POST\",\n//             body: JSON.stringify({'comment':{text, discussion_id: discussionId}}),\n//             headers\n//         })\n//             .then(response => response.json())\n//             .then(comment => dispatch({type: 'ADD_COMMENT', payload: comment}))\n//     }\n// }\n\n// export const deleteComment = (commentId) => {\n//     return (dispatch) => {\n//     dispatch({type: 'LOADING'});\n//     return fetch(`/api/comments/${commentId}`, {\n//         method: \"DELETE\",\n//         body: JSON.stringify({'comment':{id: commentId}}),\n//         headers\n//     })\n//         .then(response => response.json())\n//         .then(comment => dispatch({type: 'DELETE_COMMENT', payload: comment}))\n//     }\n// }","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { addFavorite } from '../actions/postActions'\n\n\nclass Post extends Component {\n\n  addFavorite = postId => {\n    this.props.addFavorite(postId)\n  }\n\n  render() {\n    const { data } = this.props\n    return (\n      <div className='post'>\n            <img className='image' src={data.url} alt='Image Not Available' />\n            <div className='title'>\n              <p className='title-text'>{data.title}</p>\n            </div>\n            <div className='other-text'>\n              <p>/u/{data.author_fullname}</p>\n            </div>\n        <button className='make-favorite' onClick={() => this.addFavorite(data.id)}> Make Favorite </button>\n      </div>\n    );\n  }\n};\n\nconst mapDispatchToProps = dispatch =>  {\n  return {\n    addFavorite: postId => dispatch(addFavorite(postId))\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(Post));\n","import React, { Component } from 'react';\nimport Post from './Post';\n\nclass Posts extends Component {\n  render() {\n\n    const posts = this.props.posts.map(post => <Post key={post.data.id} data={post.data} />)\n    return(\n      <div>\n        {posts}\n      </div>\n    );\n  }\n};\n\nexport default Posts;","import React, { Component } from 'react';\nimport Posts from '../components/Posts';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { fetchPosts } from '../actions/postActions';\n\nclass PostsContainer extends Component {\n\n  componentDidMount() {\n    this.props.fetchPosts()\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.posts.length > 0 ? <Posts posts={this.props.posts} /> : null}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts\n})\n\nconst mapDispatchToProps = dispatch =>  {\n  return {\n    fetchPosts: () => dispatch(fetchPosts())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PostsContainer));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { deleteFavorite } from '../actions/postActions'\n\n\nclass Favorite extends Component {\n\n  deleteFavorite = postId => {\n    this.props.deleteFavorite(postId)\n  }\n\n  render() {\n    const { data } = this.props\n    return (\n      <div className='post'>\n            <img className='image' src={data.url} alt='Image Not Available' />\n            <div className='title'>\n              <p className='title-text'>{data.title}</p>\n            </div>\n            <div className='other-text'>\n              <p>/u/{data.author_fullname}</p>\n            </div>\n        <button className='delete-favorite' onClick={() => this.deleteFavorite(data.id)}>Delete Favorite</button>\n      </div>\n    );\n  }\n};\n\nconst mapDispatchToProps = dispatch =>  {\n  return {\n    deleteFavorite: postId => dispatch(deleteFavorite(postId))\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(Favorite));","import React, { Component } from 'react';\nimport Favorite from './Favorite';\n\nclass Favorites extends Component {\n  render() {\n    const favorites = this.props.favorites.map(favorite => <Favorite key={favorite.data.id} data={favorite.data} />)\n    return(\n      <div>\n        {favorites}\n      </div>\n    );\n  }\n};\n\nexport default Favorites;","import React, { Component } from 'react';\nimport Favorites from '../components/Favorites';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\nimport { withRouter } from 'react-router';\n\nclass FavoritesContainer extends Component {\n\n  render() {\n    return (\n      <div>\n        {this.props.favorites.length > 0 ? <Favorites favorites={this.props.favorites} /> : 'You Currently Have No Favorites'}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n    favorites: state.favorites\n})\n\nconst mapDispatchToProps = dispatch =>  {\n  return {\n    fetchPosts: () => dispatch(fetchPosts())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FavoritesContainer));\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\n\nconst link = {\n  width: '100px',\n  padding: '12px',\n  height: '50px',\n  // margin: '0 6px 6px',\n  background: 'white',\n  textDecoration: 'white',\n  color: '#57a2e4',\n  size: '16px'\n}\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <NavLink\n          className='navbar'\n          to=\"/\"\n          exact\n          style={link}\n          activeStyle={{\n            background: '#57a2e4',\n            color: 'white'\n          }}\n        >/r/analog</NavLink>\n        <NavLink\n          className='navbar'\n          to=\"/favorites\"\n          exact\n          style={link}\n          activeStyle={{\n            background: '#57a2e4',\n            color: 'white'\n          }}\n        >favorites ({this.props.numFavs})</NavLink>\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  numFavs: state.favorites.length\n})\n\nexport default withRouter(connect(mapStateToProps)(Navbar));","import React, { Component } from 'react';\nimport './App.css';\nimport PostsContainer from './containers/PostsContainer';\nimport FavoritesContainer from './containers/FavoritesContainer';\nimport { Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navbar favs={this.props.numFavorites}/> \n        </header>\n        <div className=\"App-body\">\n          <Route exact path=\"/\" component={PostsContainer} />\n          <Route exact path=\"/favorites\" component={FavoritesContainer} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport managePosts from './reducers/managePosts';\n\nconst store = createStore(managePosts, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store} >\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","// import cuid from 'cuid';\n// export const cuidFn = cuid;\n\nexport default function managePosts(state={loading: false, posts:[], favorites: []}, action) {\n    switch(action.type) {\n\n        case 'LOADING_POSTS':\n            return { ...state, loading: true };\n\n        case 'FETCH_POSTS':\n            return { ...state, loading: false, posts: action.payload };\n        \n        case 'ADD_FAVORITE':\n            if (state.favorites.filter(favorite => favorite.data.id === action.newFav).length === 0) {\n                return {...state, favorites: [...state.favorites, state.posts.filter(post => post.data.id === action.newFav)[0]]};\n            } else {\n                return state;\n            }\n\n        case 'DELETE_FAVORITE':\n            return {...state, favorites: state.favorites.filter(favorite => favorite.data.id !== action.deletedFav)};\n               \n        case 'DELETE_COMMENT':\n            return { ...state, loading: false, comments: state.comments.filter(comment => comment.id !== action.payload.id) }\n\n        case 'FETCH_COMMENTS':\n            return { loading: false, comments: action.payload };\n        \n        default:\n            return state;\n    }\n\n}"],"sourceRoot":""}